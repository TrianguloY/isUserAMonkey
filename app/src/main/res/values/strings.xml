<resources>
    <string name="app_name">isUserAMonkey &amp; isUserAGoat</string>
    <string name="about">App developed by [[TrianguloY]].\nThe source code of the app is available on [[GitHub]].\n\nSpecial thanks to StackOverflow \'[[proper-use-cases-for-android-usermanager-isuseragoat]]\', \'[[strange-function-in-activitymanager-isuseramonkey-what-does-this-mean-what-is]]\' and \'[[jokes-and-humour-in-the-public-android-api]]\' for the detailed information. Check also [[Android-Documentation-Easter-Eggs]] where you can find even more easter eggs!\n\nThe monkey emoji in the icon was extracted from the [[Noto Emoji]] font.</string>

    <string name="expand">Show detailed explanation…</string>
    <string name="press">Press the \'run\' button above to execute the function</string>
    <string name="unavailable">unavailable</string>
    <string name="no_browser">Can\'t open links, is a browser installed?</string>

    <string name="m_function">ActivityManager.[[isUserAMonkey]]()</string>
    <string name="m_summary">The android SDK contains a strange function called \'[[isUserAMonkey]]\'.\nAre you a Monkey? Let\'s find out!</string>
    <string name="m_explanation">According to the [[isUserAMonkey|official documentation]]:\n\n\"Returns \"true\" if the user interface is currently being messed with by a monkey.\"\n\nInternally this function checks for a test suite program, called \'[[monkey]]\', that tries to press randomly on the screen (like a monkey). This is usually used for automatic tests, so this function could be used to see if such test is running or not.</string>
    <string name="m_true">The function returned true, you are a monkey!\nThis means that you are using a testing device with the \'[[monkey]]\' testing suite program that presses randomly on the screen. Or perhaps your ROM did this on purpose?</string>
    <string name="m_false">The function returned false, this is the expected result.\nThis means that you are not using a testing device with the \'[[monkey]]\' testing suite program that presses randomly on the screen.</string>
    <string name="m_crash">For some reason the function crashed, this was unexpected, as this function should exists and run correctly. Maybe your ROM messed it somehow?</string>

    <string name="g_function">userManager.[[isUserAGoat]]()</string>
    <string name="g_summary">The Android SDK also contains another strange function called \'[[isUserAGoat]]\'.\nAre you a Goat? Press to check!</string>
    <string name="g_explanation">This function, which was added in Android 4.2 (previously it didn\'t exist) was, according to the [[isUserAGoat|official documentation]]:\n\n\"Used to determine whether the user making this call is subject to teleportations.\nReturns whether the user making this call is a goat.\".\n\nOriginally the function always returned false, which could had been used as an internal joke, or an easter egg, or perhaps as a tool for coding purposes (the compiler removes code which is known to never execute, like \'if(false)…\' but sometimes you do need that code in the final app, so calling instead a function avoids the compiler code deletion process).\n\nWhen Android 5.0 was released, this function changed to check whether the user had installed the \'[[Goat Simulator]]\' app, probably to confirm the joke, with the message:\n\"As of LOLLIPOP, this method can now automatically identify goats using advanced goat recognition technology.\"\n\nThen, when Android 11 released, this function was changed again to always return false with description\n\"As of R, this method always returns false in order to protect goat privacy.\"\nThis version increased the requirements for apps to detect other installed apps, so most probably this method was changed for the same purpose, to avoid leaking information about an installed app.</string>
    <string name="g_jb">This was unexpected, you are using a device with Android below 4.2 where this function shouldn\'t exist, but it does? Perhaps you are using a ROM which decided to implement it.</string>
    <string name="g_lollipop_true">This was unexpected! You are using a device with Android version between 4.2 and 5.0, where this function was hardcoded to always return false. But it returned true?? Maybe you are using a ROM which changed it?</string>
    <string name="g_lollipop_false">You are using a device with Android version between 4.2 and 5.0, where this function was hardcoded to always return false, so this was the expected result.</string>
    <string name="g_true">You are using a device with Android between 5.0 and 11.0, where a \'true\' result means that you have the \'[[Goat Simulator]]\' app installed!</string>
    <string name="g_false">You are using a device with Android between 5.0 and 11.0, where a \'false\' result means that you don\'t have the \'[[Goat Simulator]]\' app installed.</string>
    <string name="g_r_true">This was unexpected!\nYou are using a device with Android version above 11.0, where this function was hardcoded to always return false. But it returned true?? Maybe you are using a ROM which changed it? Or a future Android version where it was changed again??</string>
    <string name="g_r_false">You are using a device with Android version above 11.0, where this function was hardcoded to always return false, so this was the expected result.</string>
    <string name="g_unavailable">The function is unavailable on Android below 4.2, so unfortunately it crashes when you try to run it.</string>
    <string name="g_crash">This was unexpected, you are using a device with Android above 4.1 where this function should exist, yet it crashed for you. Perhaps it was removed from a future android version?</string>

    <string name="f_function">userManager.hasUserRestriction(UserManager.[[DISALLOW_FUN]])</string>
    <string name="f_summary">This constant is present in the Android SDK, is your device restricting the \'fun\'? Hopefully not!</string>
    <string name="f_explanation">This constant checks for the device policy that \'disallows fun\', which basically disables the Android version easter egg (when you press several times on the android version inside the android settings). It is not sure if there are other third-party apps that react to this policy, maybe this app is the first one?</string>
    <string name="f_unavailable">The function is unavailable on Android below 6, so unfortunately it crashes when you try to run it.</string>
    <string name="f_crash">This was unexpected! The function should be available on Android above 5, yet it crashed for you, perhaps it was removed on a future android version?</string>
    <string name="f_true">Oh no, you are not allowed to have fun, please read this with a monotone inner voice and don\'t smile.</string>
    <string name="f_false">This was the expected outcome. You are allowed to have fun! Let\'s rejoice! This also means you can play/run the android settings easter egg, have you tried it yet?</string>
    <string name="f_m">This was unexpected! The function should be unavailable on Android below 6, yet in your case it didn\'t crash? Maybe your ROM implemented it? In that case: %s</string>

    <string name="c_function">chronometer.[[isTheFinalCountdown]]()</string>
    <string name="c_summary">When creating a chronometer, you can check if it\'s the final countdown…will it be?</string>
    <string name="c_explanation">This method is hardcoded to open the Youtube video for the song \'[[The final countdown]]\' by Europe. It even opens it [[FLAG_ACTIVITY_LAUNCH_ADJACENT|adjacent to the current app]], which is not a very used/known feature by developers. It will return true if the video was correctly opened, false if there was en error doing so.</string>
    <string name="c_true">The method run as expected, the video should have been opened, enjoy!</string>
    <string name="c_false">The method run, but apparently it failed to open the video. Perhaps you don\'t have any app that can open it?</string>
    <string name="c_unavailable">The method is only present on android 8.0 and above, which means that unfortunately on your device it crashes because it doesn\'t exist.</string>
    <string name="c_crash">Even though you are on a device above 8.0, the method crashed on your device, which is odd.</string>
    <string name="c_available">This method should be available only on Android 8.0 and above, yet it didn\'t crash for you? Did your ROM implemented it? In that case: %s</string>
    <string name="j_true">Ya like Jazz? Because your device supports it :P\nAnyway, this was the expected outcome, as nowadays most/all devices support detecting more than 5 fingers on the screen.</string>
    <string name="j_false">(jazz music stops)\nOh no, you can\'t play jazz on this device!\nThis basically means that your device is not able to detect more than 5 fingers simultaneously.</string>
    <string name="j_crash">That was unexpected, this constant is available since Android 2.3, but for some reason it crashed on your device. Either you somehow managed to install this app on an unsupported android version, or this constant was removed on a future one.</string>
    <string name="j_g">Unexpected! The constant should not be available on your device under Android 2.3, yet it run without issue, perhaps your ROM implemented it? In that case:\n%s</string>
    <string name="j_unavailable">The constant was added on Android 2.3, and your device is so old it still don\'t have it, so it crashes.</string>
    <string name="j_function">packageManager.hasSystemFeature(PackageManager.[[FEATURE_TOUCHSCREEN_MULTITOUCH_JAZZHAND]]);</string>
    <string name="j_summary">Do you have Jazz Hands? Will your device support it?</string>
    <string name="j_explanation">This constant\'s name may have been added as a joke, but at least here the description explains it properly:\n\n\"The device\'s touch screen is capable of tracking a full hand of fingers fully independently — that is, 5 or more simultaneous independent pointers.\"\n\nBasically: it\'s a way for applications to know if the device is able to detect at least 5 independent fingers moving on the screen, which is a capability that nowadays should have almost all (if not all) devices.</string>
</resources>